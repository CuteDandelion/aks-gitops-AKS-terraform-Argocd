name: Docker Build & Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'app/**'

permissions:
  id-token: write
  contents: read
  security-events: write

env:
  ACR_NAME: 'justintestacr'
  IMAGE_NAME: 'kanban-app'

jobs:
  build_scan_push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Azure Login (Service Principal)
      uses: azure/login@v2
      with:
         creds: ${{ secrets.AZURE_CREDS }}

    - name: Azure CLI Login to ACR
      run: az acr login --name ${{ env.ACR_NAME }} 

    - name: Build Docker image for scanning
      uses: docker/build-push-action@v5
      with:
        context: ./app
        file: ./app/Dockerfile
        tags: ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
        load: true 

    - name: Scan Docker image for vulnerabilities with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
        format: 'sarif'
        output: 'trivy-results.sarif'
        exit-code: '0' # exit-code of 1 forces pipeline failure on vulnerability detection, while 0 allows it to continue regardless.
        severity: 'CRITICAL,HIGH'

    - name: Upload Trivy scan results to GitHub Security tab
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'
        wait-for-processing: true

    - name: Push Docker image to ACR
      uses: docker/build-push-action@v5
      with:
        context: ./app
        file: ./app/Dockerfile
        push: true 
        tags: |
          ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.run_number }}
          ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
