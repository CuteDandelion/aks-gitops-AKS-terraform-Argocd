name: Infrastructure Plan & Security Checks

on:
  push:
    branches: [dev]
    paths:
      - 'terraform/**'
      - '.github/workflows/infra.yaml'
  pull_request:
    branches: [dev]
    paths:
      - 'terraform/**'
      - '.github/workflows/infra.yaml'

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  RESOURCE_GROUP_NAME: ${{ secrets.RESOURCE_GROUP_NAME }}
  STORAGE_ACCOUNT_NAME: ${{ secrets.STORAGE_ACCOUNT_NAME }}
  CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
  TFSTATE_KEY: ${{ secrets.TFSTATE_KEY }}

jobs:
  terraform-plan-security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Azure Login (Service Principal)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init (Azure backend)
        working-directory: ./terraform
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ env.RESOURCE_GROUP_NAME }}" \
            -backend-config="storage_account_name=${{ env.STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ env.CONTAINER_NAME }}" \
            -backend-config="key=${{ env.TFSTATE_KEY }}"

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./terraform
        run: |
          terraform plan -input=false -no-color > plan_output.txt || true
          echo "::group::Terraform Plan Output"
          cat plan_output.txt
          echo "::endgroup::"

      - name: Run Checkov (Terraform Security Scan)
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: terraform/
        continue-on-error: true

      # Optionally post plan output to PR
      - name: Post Terraform Plan to PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const planOutput = fs.readFileSync('terraform/plan_output.txt', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `#### ðŸš€ Terraform Plan Preview\n\`\`\`hcl\n${planOutput}\n\`\`\`\n\n_Review the plan carefully before merging._`
            });
          github-token: ${{ secrets.GITHUB_TOKEN }}

