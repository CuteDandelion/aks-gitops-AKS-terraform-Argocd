name: Terraform Destroy

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraformdestroy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    env:
      RESOURCE_GROUP_NAME: rg-aks-kanban
      STORAGE_ACCOUNT_NAME: rmttfstatehanad
      CONTAINER_NAME: tfstate
      BACKEND_KEY: terraform.tfstate
      TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      LOCK_ID: a5baa482-cb3c-4492-065f-b57749eb4ded 

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.1

      - name: Force Unlock Terraform State (ignore errors)
        run: |
          terraform force-unlock -force $LOCK_ID || echo "No lock found or already released"

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=${RESOURCE_GROUP_NAME}" \
            -backend-config="storage_account_name=${STORAGE_ACCOUNT_NAME}" \
            -backend-config="container_name=${CONTAINER_NAME}" \
            -backend-config="key=${BACKEND_KEY}" \
            -backend-config="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -backend-config="tenant_id=${{ secrets.AZURE_TENANT_ID }}"

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -parallelism=1
