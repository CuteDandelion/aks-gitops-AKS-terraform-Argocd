name: Terraform Destroy

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  terraform_destroy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./terraform

    env:
      KUBECONFIG: /home/runner/.kube/config
      cluster_name: test-aks

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Azure Login (Service Principal)
      uses: azure/login@v2
      with:
           creds: ${{ secrets.AZURE_CREDS }}

    - name: Get AKS Credentials
      run: |
        mkdir -p $HOME/.kube
        az aks get-credentials \
           --resource-group ${{ secrets.RESOURCE_GROUP_NAME }} \
           --name ${{ env.cluster_name }} \
           --file $HOME/.kube/config \
           --overwrite-existing
        echo "âœ… kubeconfig written:"
        ls -la $HOME/.kube
        stat $HOME/.kube/config
        kubectl get ns


    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: latest

    - name: Write terraform.tfvars from secret
      run: echo "${{ secrets.TF_VARS }}" | base64 --decode > terraform.tfvars

   # - name: Download terraform.tfstate from Blob Storage
   #   run: |
   #     az storage blob download \
   #       --account-name ${{ secrets.STORAGE_ACCOUNT_NAME }} \
   #       --container-name ${{ secrets.CONTAINER_NAME }} \
   #       --name terraform.tfstate \
   #       --file terraform.tfstate \
   #       --auth-mode login 

    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="resource_group_name=${{ secrets.RESOURCE_GROUP_NAME }}" \
          -backend-config="storage_account_name=${{ secrets.STORAGE_ACCOUNT_NAME }}" \
          -backend-config="container_name=${{ secrets.CONTAINER_NAME }}" \
          -backend-config="key=${{ secrets.TFSTATE_KEY }}" \
          -backend-config="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -backend-config="tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
          -var="ssh_public_key_data=${{ secrets.SSH_PUBLIC_KEY_AKS }}" \
          -reconfigure
     # env:
     #   ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
     #   ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
     #   ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
     #   ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Terraform Destroy aks cluster
      run: terraform destroy -target=module.aks -auto-approve -lock=false
      #env:
      #  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      #  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      #  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      #  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Terraform Destroy 
      run: terraform destroy -auto-approve -lock=false






