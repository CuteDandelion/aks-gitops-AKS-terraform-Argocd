name: Terraform Plan

on:
  push:
    branches: [dev]
    paths:
      - 'terraform/**'
      - '.github/workflows/tf-plan.yaml'
  pull_request:
    branches: [dev]
    paths:
      - 'terraform/**'
      - '.github/workflows/tf-plan.yaml'

jobs:
  terraformplan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login (Service Principal)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Tflint
        uses: terraform-linters/setup-tflint@v4

      - name: TFLint Scan
        run: |
          tflint --init
          tflint --recursive --color
        continue-on-error: true

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: .
          framework: terraform
          soft_fail: true
          output_format: cli,sarif
          output_file_path: checkov-results-terraform.sarif

      - name: Upload Checkov scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ./terraform/checkov-results-terraform.sarif
          wait-for-processing: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init \
          -backend-config="resource_group_name=${{ secrets.RESOURCE_GROUP_NAME }}" \
          -backend-config="storage_account_name=${{ secrets.STORAGE_ACCOUNT_NAME }}" \
          -backend-config="container_name=${{ secrets.CONTAINER_NAME }}" \
          -backend-config="key=${{ secrets.TFSTATE_KEY }}"

      - name: Terraform Plan
        run: terraform plan -input=false -no-color > plan_output.txt || true

      - name: Post Terraform Plan to PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const planOutput = fs.readFileSync('plan_output.txt', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `#### ðŸš€ Terraform Plan Preview\n\`\`\`hcl\n${planOutput}\n\`\`\`\n\n_Review the plan carefully before merging._`
            });
          github-token: ${{ secrets.GITHUB_TOKEN }}

          